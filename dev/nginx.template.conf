server_tokens off;

map $http_x_forwarded_proto $real_scheme {
  default $http_x_forwarded_proto;
  ''      $scheme;
}

{{ if ne ("SURF_ALLOWED_HOSTS"|env) "*" }}
server {
  listen 8080 default_server;
  return 444;
}
{{ end }}

proxy_cache_path /var/cache/nginx/auth_cache levels=1:2 keys_zone=auth_cache:1m max_size=100m inactive=60m;

server {
  listen 8080 deferred;
  client_max_body_size 4G;

  {{ if ne ("SURF_ALLOWED_HOSTS"|env) "*" }}
  server_name {{ "SURF_ALLOWED_HOSTS" | env | replace "," " " }};
  {{ end }}

  keepalive_timeout 5;

  # avoid nginx caching IPs forever https://serverfault.com/a/593003
  resolver 127.0.0.11 valid=30s;
  set $appserver "http://{{ "NGINX_APP_IP" | env }}:{{ "NGINX_APP_PORT" | env }}";

  {{ if ne ("SURF_STATIC_ROOT"|env) "" }}
  location = /403.html {
    root {{ "SURF_STATIC_ROOT" | env }}nginx/;
  }

  location = /404.html {
    root {{ "SURF_STATIC_ROOT" | env }}nginx/;
  }

  location = /500.html {
    root {{ "SURF_STATIC_ROOT" | env }}nginx/;
  }

  location = /favicon.ico {
    # indulge browsers that fail to read the meta tag
    # (or when it is not there)
    root {{ "SURF_STATIC_ROOT" | env }}img/;
  }

  # path for static files
  location /static/ {
    error_page 403 /403.html;
    error_page 404 /404.html;
    error_page 500 502 503 504 /500.html;
    alias {{ "SURF_STATIC_ROOT" | env }};
  }
  {{ end }}

  {{ if ne ("SURF_MEDIA_ROOT"|env) "" }}
  # path for media files
  location /media/ {
    error_page 403 /403.html;
    error_page 404 /404.html;
    error_page 500 502 503 504 /500.html;
    alias {{ "SURF_MEDIA_ROOT" | env }};
  }
  {{ end }}

  location /api/ {
    proxy_read_timeout 120s;
    proxy_connect_timeout 120s;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # enable this if and only if you use HTTPS
    proxy_set_header X-Forwarded-Proto $real_scheme;
    proxy_set_header Host $host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_next_upstream error;
    proxy_intercept_errors on;
    proxy_pass $appserver;
  }

  location / {
    error_page 403 /403.html;
    error_page 404 /404.html;
    proxy_read_timeout 120s;
    proxy_connect_timeout 120s;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # enable this if and only if you use HTTPS
    proxy_set_header X-Forwarded-Proto $real_scheme;
    proxy_set_header Host $host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_next_upstream error;
    proxy_intercept_errors on;
    proxy_pass $appserver;
  }
}
